// <auto-generated />
using System;
using Inventory_Management_System.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Inventory_Management_System.Migrations.InventoryManagementDB
{
    [DbContext(typeof(InventoryManagementDBContext))]
    [Migration("20231120131858_StorageLocationCapacity")]
    partial class StorageLocationCapacity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Inventory_Management_System.Model.Good.Component", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BoxCapacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("PartNumber")
                        .HasColumnType("int");

                    b.Property<string>("ProductDesignation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Component");
                });

            modelBuilder.Entity("Inventory_Management_System.Model.Good.FinishedGood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BoxCapacity")
                        .HasColumnType("int");

                    b.Property<string>("BuildOfMaterial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("PartNumber")
                        .HasColumnType("int");

                    b.Property<string>("ProductDesignation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FinishedGood");
                });

            modelBuilder.Entity("Inventory_Management_System.Model.HandlingUnit.Box<Inventory_Management_System.Model.Good.Component>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GoodId")
                        .HasColumnType("int");

                    b.Property<string>("LocationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxCapacity")
                        .HasColumnType("int");

                    b.Property<int>("PartNumber")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid?>("RawMaterialLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GoodId");

                    b.HasIndex("RawMaterialLocationId");

                    b.ToTable("ComponentStock");
                });

            modelBuilder.Entity("Inventory_Management_System.Model.HandlingUnit.Box<Inventory_Management_System.Model.Good.FinishedGood>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GoodId")
                        .HasColumnType("int");

                    b.Property<string>("LocationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxCapacity")
                        .HasColumnType("int");

                    b.Property<Guid?>("OutboundLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PartNumber")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GoodId");

                    b.HasIndex("OutboundLocationId");

                    b.ToTable("FinishedGoodStock");
                });

            modelBuilder.Entity("Inventory_Management_System.Model.Location.OutboundLocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LocationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocationType")
                        .HasColumnType("int");

                    b.Property<int>("MaxBoxCapacity")
                        .HasColumnType("int");

                    b.Property<int>("PartNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OutboundLocations");
                });

            modelBuilder.Entity("Inventory_Management_System.Model.Location.RawMaterialLocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LocationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocationType")
                        .HasColumnType("int");

                    b.Property<int>("MaxBoxCapacity")
                        .HasColumnType("int");

                    b.Property<int>("PartNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RawMaterialLocations");
                });

            modelBuilder.Entity("Inventory_Management_System.Model.HandlingUnit.Box<Inventory_Management_System.Model.Good.Component>", b =>
                {
                    b.HasOne("Inventory_Management_System.Model.Good.Component", "Good")
                        .WithMany()
                        .HasForeignKey("GoodId");

                    b.HasOne("Inventory_Management_System.Model.Location.RawMaterialLocation", null)
                        .WithMany("Boxes")
                        .HasForeignKey("RawMaterialLocationId");

                    b.Navigation("Good");
                });

            modelBuilder.Entity("Inventory_Management_System.Model.HandlingUnit.Box<Inventory_Management_System.Model.Good.FinishedGood>", b =>
                {
                    b.HasOne("Inventory_Management_System.Model.Good.FinishedGood", "Good")
                        .WithMany()
                        .HasForeignKey("GoodId");

                    b.HasOne("Inventory_Management_System.Model.Location.OutboundLocation", null)
                        .WithMany("Boxes")
                        .HasForeignKey("OutboundLocationId");

                    b.Navigation("Good");
                });

            modelBuilder.Entity("Inventory_Management_System.Model.Location.OutboundLocation", b =>
                {
                    b.Navigation("Boxes");
                });

            modelBuilder.Entity("Inventory_Management_System.Model.Location.RawMaterialLocation", b =>
                {
                    b.Navigation("Boxes");
                });
#pragma warning restore 612, 618
        }
    }
}
